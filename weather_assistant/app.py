import streamlit as st
import requests
import os

# L·∫•y API key t·ª´ bi·∫øn m√¥i tr∆∞·ªùng
WEATHER_API_KEY = os.getenv("WEATHER_API_KEY")

# --- H√†m l·∫•y th·ªùi ti·∫øt h√¥m nay ---
def get_weather_today(city):
    url = f"https://api.openweathermap.org/data/2.5/weather?q={city}&appid={WEATHER_API_KEY}&units=metric&lang=vi"
    response = requests.get(url)
    if response.status_code == 200:
        data = response.json()
        return {
            "temp": data["main"]["temp"],
            "desc": data["weather"][0]["description"],
            "humidity": data["main"]["humidity"],
            "wind": data["wind"]["speed"]
        }
    else:
        return None

# --- H√†m l·∫•y d·ª± b√°o th·ªùi ti·∫øt ng√†y mai ---
def get_weather_tomorrow(city):
    url = f"https://api.openweathermap.org/data/2.5/forecast?q={city}&appid={WEATHER_API_KEY}&units=metric&lang=vi"
    response = requests.get(url)
    if response.status_code == 200:
        data = response.json()
        tomorrow_data = data['list'][1]  # D·ª± b√°o g·∫ßn nh·∫•t c·ªßa ng√†y mai (3 gi·ªù/l·∫ßn)
        return {
            "temp": tomorrow_data["main"]["temp"],
            "desc": tomorrow_data["weather"][0]["description"],
            "humidity": tomorrow_data["main"]["humidity"],
            "wind": tomorrow_data["wind"]["speed"]
        }
    else:
        return None

# --- H√†m g·ª£i √Ω trang ph·ª•c ---
def suggest_outfit(temp):
    if temp < 15:
        return "üå¨Ô∏è Tr·ªùi l·∫°nh, b·∫°n n√™n m·∫∑c √°o kho√°c d√†y, khƒÉn v√† n√≥n ·∫•m."
    elif 15 <= temp < 25:
        return "üçÇ Th·ªùi ti·∫øt m√°t m·∫ª, √°o d√†i tay ho·∫∑c √°o kho√°c nh·∫π l√† ph√π h·ª£p."
    else:
        return "‚òÄÔ∏è Tr·ªùi n√≥ng, m·∫∑c ƒë·ªì m√°t, √°o thun v√† qu·∫ßn short l√† h·ª£p l√Ω."

# --- H√†m g·ª£i √Ω bi·ªán ph√°p th·ªùi ti·∫øt ---
def weather_advice(desc):
    if "m∆∞a" in desc:
        return "‚òî Mang theo √¥ v√† √°o m∆∞a khi ra ngo√†i nh√©."
    elif "n·∫Øng" in desc:
        return "üß¥ D√πng kem ch·ªëng n·∫Øng v√† ƒëeo k√≠nh r√¢m ƒë·ªÉ b·∫£o v·ªá da."
    elif "gi√≥" in desc:
        return "üí® C·∫©n th·∫≠n gi√≥ m·∫°nh, tr√°nh ra ngo√†i n·∫øu kh√¥ng c·∫ßn thi·∫øt."
    else:
        return "‚úÖ Kh√¥ng c√≥ hi·ªán t∆∞·ª£ng th·ªùi ti·∫øt ƒë·∫∑c bi·ªát c·∫ßn lo l·∫Øng."

# --- G·ª£i √Ω m√≥n ƒÉn theo nhi·ªát ƒë·ªô ---
def food_suggestion(temp):
    if temp < 15:
        return "üçú M·ªôt t√¥ ph·ªü, l·∫©u ho·∫∑c ch√°o n√≥ng s·∫Ω r·∫•t tuy·ªát!"
    elif 15 <= temp < 25:
        return "ü•ò H√£y th·ª≠ b√∫n b√≤, h·ªß ti·∫øu ho·∫∑c c∆°m t·∫•m nh√©."
    else:
        return "üçπ Tr·ªùi n√≥ng, tr√† s·ªØa, sinh t·ªë ho·∫∑c g·ªèi cu·ªën s·∫Ω m√°t l√†nh."

# --- Giao di·ªán Streamlit ---
st.set_page_config(page_title="Tr·ª£ l√Ω th·ªùi ti·∫øt AI", page_icon="üå§Ô∏è")
st.title("üå§Ô∏è Tr·ª£ L√Ω Th·ªùi Ti·∫øt AI")

city = st.text_input("üåç Nh·∫≠p t√™n th√†nh ph·ªë", "Hanoi")
st.markdown("üìù *L∆∞u √Ω: N√™n vi·∫øt kh√¥ng d·∫•u. V√≠ d·ª•: `Hanoi`, `Ho Chi Minh`*")

option = st.radio("üìÖ B·∫°n mu·ªën xem d·ª± b√°o cho:", ("H√¥m nay", "Ng√†y mai"))

if st.button("üîç Xem k·∫øt qu·∫£"):
    if option == "H√¥m nay":
        weather = get_weather_today(city)
        title = f"üìÜ Th·ªùi ti·∫øt h√¥m nay t·∫°i {city.title()}:"
    else:
        weather = get_weather_tomorrow(city)
        title = f"üìÖ D·ª± b√°o th·ªùi ti·∫øt ng√†y mai t·∫°i {city.title()}:"

    if weather:
        st.subheader(title)
        st.write(f"üå°Ô∏è Nhi·ªát ƒë·ªô: {weather['temp']}¬∞C")
        st.write(f"üå¶Ô∏è Th·ªùi ti·∫øt: {weather['desc']}")
        st.write(f"üíß ƒê·ªô ·∫©m: {weather['humidity']}%")
        st.write(f"üí® Gi√≥: {weather['wind']} m/s")

        st.subheader("üëï G·ª£i √Ω trang ph·ª•c:")
        st.info(suggest_outfit(weather['temp']))

        st.subheader("üõ°Ô∏è Bi·ªán ph√°p ph√≤ng tr√°nh:")
        st.warning(weather_advice(weather['desc']))

        st.subheader("üçΩÔ∏è G·ª£i √Ω m√≥n ƒÉn ph√π h·ª£p:")
        st.success(food_suggestion(weather['temp']))
    else:
        st.error("‚ùå Kh√¥ng th·ªÉ l·∫•y d·ªØ li·ªáu. Ki·ªÉm tra l·∫°i t√™n th√†nh ph·ªë.")
        st.markdown("üìù *G·ª£i √Ω: N√™n vi·∫øt kh√¥ng d·∫•u. V√≠ d·ª•: `Hanoi`, `Ho Chi Minh`*")
        st.markdown("üìù *L∆∞u √Ω: H√£y th·ª≠ l·∫°i v·ªõi t√™n c·ªßa t·ªânh/th√†nh ph·ªë thay cho t√™n huy·ªán/th·ªã x√£*")


